#!/usr/bin/tclsh

set libtcldir [file join [file dirname [file dirname [file normalize [info script]]]] recorder libtcl]
source [file join $libtcldir common.tcl]

proc main {} {
    getOptions [configFile server.yaml] {}
    if {[catch {readConfig $::opt(config)} err dbg]} {
	debugStackTrace $dbg
	puts stderr $err
	exit 2
    }
    file mkdir $::config(workdir)
    runQueue
    vwait forever
}

proc readConfig {configFile} {
    set defaultConfig [dict create workdir ~/queue speechkits [dict create 127.0.0.1:80 1]]
    set readConfig [::yaml::yaml2dict -file $configFile]
    set conf [dict merge $defaultConfig $readConfig]
    set ::config $conf
}

proc feedFile {soundFile} {
    ::log::log info "Recognizing $soundFile..."
    set pipe [open [list | asrclient-cli.py --key internal --server localhost --ipv4 --silent $soundFile] r]
    set textH [open $soundFile.tmp w]
    while {![eof $pipe]} {
	set line [gets $pipe]
	if {[regexp {^from } $line] || [regexp {^\s*$} $line]} {} else {puts $textH $line}
    }
    close $textH
    close $pipe
    file rename -force -- $soundFile.tmp $soundFile.text
    puts "$soundFile -> $soundFile.text"
}

proc runQueue {} {
    set flagFiles [glob -nocomplain -directory [file normalize [dict get $::config workdir]] *.flag]
    foreach flagFile $flagFiles {
	set soundFile [file rootname $flagFile]
	file delete -- $flagFile
	if [catch {feedFile $soundFile} err] {
	    file delete -- $soundFile.tmp
	    puts stderr $err
	} else {
	    file delete -- $soundFile
	}
    }
    after 500 runQueue
}

main
