Структура базы данных
=====================

Модель данных с точки зрения подсистем записи и распознавания
-------------------------------------------------------------

Мы записываем и распознаем разговор сотрудника с клиентом в некотором
салоне. В исходных данных указывалось, что один и тот же сотрудник может
выходить на работу в разные салоны, поэтому "сотрудник разговаривал с клиентом
в салоне", а не "сотрудник работает в салоне". "Салон" - понятие условное,
минимальная организационная единица. Насколько мне удалось понять, интересует
аналитика по организационным единицам, у которых есть иерархия. На данный
момент отображение иерархии отсутствует, будет добавлено по мере формирования
аналитики.

Интерфейсу записи, расположенному в салоне, интересен список "своих"
сотрудников (предполагается, что их немного, и можно показать всех на одном
экране вместе с состоянием записи). Это отображено в структуре базы.

Система записи рассчитана на отсутствие постоянной связи с сервером
распознавания, но эпизодическая все же требуется. Система записи периодически
пытается обновить списки сотрудников с сервера, но если не может, работает с
тем, что есть.

Заведение нового сотрудника и/или указание, что он работает в этом салоне,
оставлено на администраторский интерфейс.

Записи, таблица talk
--------------------

id integer primary key - ключ, для ссылок
talk text - распознанный текст записи
started_at datetime - дата/время (начала) записи
made_on date - дата, в которую была сделана запись (для выборок)
duration double precision - продолжительность записи в секундах
employee_id integer - ключ сотрудника, может быть пустым
site_id integer - ключ салона, может быть пустым
headset - номер гарнитуры, если был предоставлен станцией записи, может быть пустым
filename text - имя файла записи, может быть пустым
extra json - прочие данные, предоставленные станцией записи
analyzed boolean not null default 0 - была ли уже проанализирована после заведения

Сотрудники, таблица employee
----------------------------

id integer primary key - ключ для ссылок
name string - имя, для показа в интерфейсе
active boolean - действующий сотрудник или исторический (чьи записи еще хранятся)

Поскольку в интерфейсе сотрудников можно различить только по именам, то
дополнительное требование, которое будет реализовано вне базы - полные тезки
возможны, но в каждом салоне все имена должны быть различны. Иногда для этого
может потребоваться поменять имя в базе (добавить какой-то признак для
различения).

Организационные единицы, таблица site
-------------------------------------

id integer primary key - идентификатор, для ссылок
name - название, для показа в аналитике
active boolean - действующая единица (салон) или историческая (чьи записи еще хранятся)

Распределение сотрудников по салонам, таблица site_employee
-----------------------------------------------------------

site_id not null - ключ салона
employee_id not null - ключ сотрудника

Применяется интерфейсом записи, чтобы отследить своих сотрудников. Сотрудник
может относиться к нескольким салонам.

Модель данных с точки зрения аналитики
--------------------------------------

У нас есть словарь регулярных выражений, которые мы ищем в записях
разговоров. При загрузке записи в базу данных мы анализируем ее на наличие
выражений из этого словаря, и храним соответствие.

При изменении словаря мы перепроверяем все записи на наличие добавленных
выражений. Для ускорения работы мы не допускаем с точки зрения базы изменение
регулярных выражений, чтобы не было необходимости перепроверять весь словарь
по всем записям. Вместо этого старое удаляется и добавляется новое (с тем же
описанием). С точки зрения человека это выглядит как редактирование.

Категории выражений, таблица phrase_category
--------------------------------------------

id integer primary key - идентификатор, для ссылок
title string not null unique - название
ord integer not null unique - порядок сортировки

Словарь выражений, таблица phrase
---------------------------------

id integer primary key - идентификатор, для ссылок
category_id integer - ключ категории
desired boolean not null - желательное/нежелательное
description text not null unique - человекочитаемое описание выражения
regexp text not null - регулярное выражение
analyzed boolean not null default 0 - было ли уже проанализировано после заведения

Вхождения выражений в записи, таблица phrase_talk
-------------------------------------------------

phrase_id not null - ключ выражения
talk_id not null - ключ записи
n integer not null - количество вхождений

Техническая часть
-----------------

Станции записи, таблица record_station
--------------------------------------

ip inet - IP-адрес станции
site_id integer - ключ салона
headset integer - номер гарнитуры
unique (site_id, headset)
