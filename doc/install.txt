Установка системы распознавания
===============================

Yandex SpeechKit Box
--------------------

Устанавливать по инструкции
<https://tech.yandex.ru/zout_speechkit/box/doc/guide_637d664254a1ebbd4c1a070bb28a9533/concepts/about-docpage/>. Сам не пробовал, было уже готовое. Нужно установить lingware
freeform. Остальные (более специализированные) не нужны.

Лицензия устаревает за 10 дней. Так что для постоянной работы нужно включить
скрипт обновления лицензии /etc/cron.daily/yandex_update_license. Из этого
следует, что у сервера должен быть нормальный (без хитрых авторизаций) доступ
к внешнему HTTPS. Скрипт при установке вроде бы прописывается в cron.daily, но
не работает, поскольку в Ubuntu и Debian оттуда выполняются только файлы без
расширения, а у него расширение .sh. Надо переименовать. В моем случае его
пришлось еще править, кажется, дописав ему ключ.

Для демонстрации постоянное обновление не требуется, но один раз ее обновить
(или получить) надо. Это можно сделать, запустив тот же скрипт вручную (от
рута). Скрипт пишет не на экран, а в /var/log/yandex/licenseupdate.log, отчет
о выполнении искать там.

Данные, которые оно запрашивает, нужны настоящие.

Подробности про лицензию:
<https://tech.yandex.ru/zout_speechkit/box/doc/guide_637d664254a1ebbd4c1a070bb28a9533/concepts/speechkit-box-get-license-docpage/>.

Симптомы неживой лицензии: yandex-asr-server при запуске долго тормозит, и в
начале лога ругается на лицензию. Тонкость: тормозит он тоже не молча, и если
смотреть systemctl status yandex-asr-server, то вскоре информация про лицензию
пролистнется. journalctl -xe позволяет увидеть больше.

Проверка установки:

    curl localhost:3457/info

должен выдавать информацию о lingware freeform. Это признак того, что успешно
запустился сам движок распознавания.

    curl localhost:80/ping

должен выдавать ничего, но завершаться успешно (не ругаться на ошибку). Это
признак того, что запустился прокси-сервер.

У меня при попытке запуска выяснилось, что библиотеки SSL, идущие в комплекте,
не тех версий. Дистрибутивные как раз тех, но нужные пакеты не стояли. Но судя
по тому, что я видел, он изначально ставился как-то криво. Симптомы:
собственно сервер (yandex-asr-server) запускается нормально, а прокси
(yandex-asr-proxy-server) — нет. Причем молчит как рыба об лед. Надо выкопать
из скрипта команду запуска бинарника и выполнить вручную, тогда он расскажет,
что не смог загрузить. Важно: скрипт запуска устанавливает переменную
окружения LD_LIBRARY_PATH так, чтобы библиотеки, идущие в комплекте, были
доступны, но, кажется, рассматривались последними. При ручном выяснении
проблем ее надо устанавливать, желательно аналогично. Тонкость такая:
собственные библиотеки из комплекта должны быть доступны, иначе не
запустится. Но одноименные дистрибутивным, похоже, должны быть позже
дистрибутивных, а то они кривые. Впрочем, кривизна, возможно, от кривой
установки до меня.

Установка центрального сервера
------------------------------

    $ sudo apt-get install --yes git screen tcl tcllib
    $ screen -D -RR

Если эта команда не создала новый сеанс, а подцепила ранее запущенный, надо
убить нажатием Ctrl-C всё, что там запущено, пока не увидим [screen is
terminating]. После чего повторить команду. Система не рассчитана на
одновременную работу нескольких комплектов себя.

    $ cd
    $ git clone https://github.com/ran-lasgalen/talkrec.git
    $ cd talkrec
    $ server/install demo

Инсталлятор спросит данные о серверах распознавания, и расскажет, в каком
формате. В известной мне ситуации адрес будет 10.170.4.127:8080. В
демонстрационном варианте используется только первый введенный адрес, и только
один поток.

Если установка завершится успешно, программа попросит выполнить demo_run (с
полным путем). Надо его выполнить. Он выполняется, пока не нажмут Ctrl-C.

В демонстрационном режиме, помимо процессов приема записей (rsyncd) и передачи
их на распознавание (talkrec-feeder), запускается еще простейший скрипт показа
результатов распознавания (show-results).

rsyncd в норме не пишет ничего. talkrec-feeder пишет о начале и об окончании
распознавания. show-results отвечает на порту 8888 сервера, выводит имеющиеся
результаты на момент запроса. Просматривать можно любым браузером.

Если хочется оставить запущенный процесс на несколько дней, то
последовательным нажатием Ctrl-A d можно отсоединить сеанс screen и выйти из
системы. Система будет продолжать работать. Вышеупомянутая команда screen -D
-RR позволит подцепить этот сеанс в будущем.

Установка системы записи разговоров
===================================

Для демо-установки достаточно знать IP-адрес сервера центрального сервера и
IP-адреса станций записи. Для установки на станцию записи на центральном
сервере *должен быть запущен rsyncd*.

    $ sudo apt-get install --yes screen rsync tcl tcllib
    $ screen -D -RR

Если эта команда не создала новый сеанс, а подцепила ранее запущенный, надо
убить нажатием Ctrl-C всё, что там запущено, пока не увидим [screen is
terminating]. После чего повторить команду. Система не рассчитана на
одновременную работу нескольких комплектов себя.

    $ cd
    $ rm -rf talkrec
    $ mkdir talkrec
    $ cd talkrec
    $ SERVER=<IP-адрес центрального сервера>
    $ RECORDERS=<IP-адреса станций записи через запятую>
    $ rsync -av --delete rsync://$SERVER:8873/recorder recorder

Если в качестве центрального сервера используется одна из станций записи (в
демонстрационных целях вполне осмысленная конфигурация), то эту команду
выполнять не надо, в комплект центрального сервера комплект для станции записи
уже входит (сервер этот комплект раздает).

    $ recorder/install --server $SERVER --recorders $RECORDERS demo

Если установка завершится успешно, программа попросит выполнить demo_run (с
полным путем). Надо его выполнить *из графической среды*. Он выполняется, пока
не нажмут Ctrl-C.

Запускаются процесс записи (recorder), процесс отправки записей на центральный
сервер (sound_sender) и программа управления записью (record_manager).

recorder сообщает о начале и завершении записей. sound_sender сообщает об
отсылке данных на сервер. record_manager — программа графическая, для нее и
нужна графическая среда.

Задумано, что record_manager в салоне используется один, запущенный с любой из
станций записи.

Если хочется оставить запущенный процесс на несколько дней, то
последовательным нажатием Ctrl-A d можно отсоединить сеанс screen и выйти из
системы. Система будет продолжать работать. Вышеупомянутая команда screen -D
-RR позволит подцепить этот сеанс в будущем.
